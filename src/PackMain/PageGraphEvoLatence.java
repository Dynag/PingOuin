/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PackMain;

import PackFunc.funcMain;
import PackMain.FenHist;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import static java.lang.Integer.SIZE;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;

/**
 *
 * @author Dynaglien
 */
public final class PageGraphEvoLatence extends javax.swing.JFrame {
final static XYSeries dataDep = new XYSeries( "" ); //NOI18N
    ResultSet rs = null;
    Statement ps = null;
    PreparedStatement ps1 = null;
    public static String ipHist;
    /**
    /**
 Creates new form PageGraphEvoLatence
     * @return 
     */
    public ChartPanel graphEvoLatence() {
        initComponents();
        JFreeChart repart = graph();
        ChartPanel crepart = new ChartPanel(repart);
        setContentPane(crepart);
        return crepart;
    }
    
    public JFreeChart graph(){  
        XYSeriesCollection dataset = new XYSeriesCollection( );
        dataset.removeAllSeries();
        dataDep.clear();
        donnee();
        dataset.addSeries(dataDep);
        JFreeChart xylineChart = ChartFactory.createXYLineChart(
         "" , //NOI18N
         "" , //NOI18N
         "" , //NOI18N
         dataset ,
         PlotOrientation.VERTICAL ,
         false , false , false);
        final Color bleu = new Color(153, 204, 255);
        XYPlot plot = xylineChart.getXYPlot();
        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
        plot.setOutlineVisible(true);
        renderer.setSeriesPaint(0, bleu);
        renderer.setSeriesStroke(0, new BasicStroke(2.0f));
        plot.setRenderer(renderer);
        plot.setBackgroundPaint(Color.white);
        plot.setRangeGridlinesVisible(true);
        plot.setRangeGridlinePaint(Color.GRAY);
        plot.setDomainGridlinesVisible(false);
        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
       // rangeAxis.setTickUnit(new NumberTickUnit(10.0));
        rangeAxis.setAutoRange(rootPaneCheckingEnabled);

        return xylineChart;
    }
    
    
    public void donnee(){
        try {
            String sql = "SELECT * FROM '"+ipHist+"' ORDER BY date desc";
            ps1 = PackFunc.Var.dbConHist.prepareStatement(sql);
            ps1.setFetchSize(100);
            rs = ps1.executeQuery();
            double i=0;
            while(rs.next()){
                dataDep.add(i, Double.parseDouble(rs.getString("lat")));
                i=i+1;
            }
            ps1.close();
        } catch (SQLException ex) {
            Logger.getLogger(FenHist.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panGraph = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout panGraphLayout = new javax.swing.GroupLayout(panGraph);
        panGraph.setLayout(panGraphLayout);
        panGraphLayout.setHorizontalGroup(
            panGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 715, Short.MAX_VALUE)
        );
        panGraphLayout.setVerticalGroup(
            panGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 478, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panGraph, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panGraph, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) { //NOI18N
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PageGraphEvoLatence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PageGraphEvoLatence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PageGraphEvoLatence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PageGraphEvoLatence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PageGraphEvoLatence().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panGraph;
    // End of variables declaration//GEN-END:variables
}
